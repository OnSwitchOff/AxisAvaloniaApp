<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="using:AxisAvaloniaApp.Converters"
        xmlns:controlsEx="using:AxisAvaloniaApp.UserControls.Extensions"
        xmlns:enums="using:AxisAvaloniaApp.UserControls.MessageBox"
        mc:Ignorable="d" 
        d:DesignWidth="800" d:DesignHeight="450"
        x:Class="AxisAvaloniaApp.UserControls.MessageBox.MessageBox"
        SizeToContent="WidthAndHeight"
        MinWidth="200"
        MaxWidth="{Binding MaxWidth}"
        WindowStartupLocation="{Binding LocationOfMyWindow}"
        MinHeight="100"
        CanResize="{Binding CanResize}"        
        Icon="/Assets/AxisIcon.ico"
        Title="{Binding ContentTitle}">

  <Window.KeyBindings>
    <KeyBinding Gesture="Ctrl+C" Command="{Binding Copy}" />
  </Window.KeyBindings>
  
  <Window.Resources>
    <converters:BitmapAssetValueConverter x:Key="BitmapAsset"/>
  </Window.Resources>
  
  <Window.Styles>
    <Style Selector="TextBlock">
      <Setter Property="TextWrapping" Value="WrapWithOverflow" />
    </Style>
    <Style Selector="TextBlock.header">
      <Setter Property="FontWeight" Value="Bold" />
    </Style>
    <Style Selector="Button">
      <Setter Property="Margin" Value="15 0 0 0" />
      <Setter Property="MinHeight" Value="24" />
      <Setter Property="MinWidth" Value="75" />
    </Style>
    <Style Selector="TextBlock.ButtonContent">
      <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
  </Window.Styles>

  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="15" />
      <ColumnDefinition Width="Auto" />
      <ColumnDefinition Width="15" />
      <ColumnDefinition Width="*" />
      <ColumnDefinition Width="15" />
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="15" />
      <RowDefinition Height="*" />
      <RowDefinition Height="15" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="15" />
    </Grid.RowDefinitions>
    <!--Icon-->
    <Image Grid.Row="1" 
           Grid.Column="1" 
           MaxHeight="50" 
           MaxWidth="50" 
           VerticalAlignment="Top"
           IsVisible="{Binding Icon}"
           Source="{Binding ImagePath, Converter={StaticResource BitmapAsset}}" />
    <Grid Grid.Row="1" Grid.Column="3">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="15" />
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>
      <!--Bold text-->
      <controlsEx:AxisTextBlock Grid.Row="0"
                                Classes="header"
                                Text="{Binding ContentHeader}"
                                LocalizeTextKey="{Binding ContentHeaderKey}"
                                IsVisible="{Binding HasHeader}" />
      <!--Content text-->
      <controlsEx:AxisTextBlock Grid.Row="2"
                                Text="{Binding ContentMessage}"
                                LocalizeTextKey="{Binding ContentMessageKey}"/>
    </Grid>
    <!--Buttons-->
    <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="3"
                HorizontalAlignment="Right">
      <Button Tag="Colored" 
              Command="{Binding ButtonClick}"
              CommandParameter="{x:Static enums:EButtonResults.Ok}" 
              IsVisible="{Binding IsOkShowed}">
        <TextBlock Text="OK" 
                   Classes="ButtonContent"/>
      </Button>
      <Button Command="{Binding ButtonClick}" 
              CommandParameter="{x:Static enums:EButtonResults.Yes}"
              IsVisible="{Binding IsYesShowed}">
        <controlsEx:AxisTextBlock LocalizeTextKey="strYes"
                                  Classes="ButtonContent"/>
      </Button>
      <Button Command="{Binding ButtonClick}" 
              CommandParameter="{x:Static enums:EButtonResults.No}"
              IsVisible="{Binding IsNoShowed}">
        <controlsEx:AxisTextBlock LocalizeTextKey="strNo"
                                  Classes="ButtonContent"/>
      </Button>
      <Button Command="{Binding ButtonClick}"
              CommandParameter="{x:Static enums:EButtonResults.Abort}"
              IsVisible="{Binding IsAbortShowed}">
        <controlsEx:AxisTextBlock LocalizeTextKey="strAbort"
                                  Classes="ButtonContent"/>
      </Button>
      <Button Command="{Binding ButtonClick}"
              CommandParameter="{x:Static enums:EButtonResults.Retry}"
              IsVisible="{Binding IsRetryShowed}">
        <controlsEx:AxisTextBlock LocalizeTextKey="strRetry"
                                  Classes="ButtonContent"/>
      </Button>
      <Button Command="{Binding ButtonClick}"
              CommandParameter="{x:Static enums:EButtonResults.Ignore}"
              IsVisible="{Binding IsIgnoreShowed}">
        <controlsEx:AxisTextBlock LocalizeTextKey="strIgnore"
                                  Classes="ButtonContent"/>
      </Button>
      <Button Command="{Binding ButtonClick}"
              CommandParameter="{x:Static enums:EButtonResults.Cancel}"
              IsVisible="{Binding IsCancelShowed}">
        <controlsEx:AxisTextBlock LocalizeTextKey="strCancel"
                                  Classes="ButtonContent"/>
      </Button>      
    </StackPanel>
  </Grid>
</Window>
